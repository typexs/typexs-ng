{"version":3,"file":"typexs-ng-base.js.map","sources":["ng://@typexs-ng/base/modules/navigator/NavEntry.ts","ng://@typexs-ng/base/modules/navigator/navigator.component.ts","ng://@typexs-ng/base/modules/navigator/navigator.module.ts","ng://@typexs-ng/base/libs/xsform/ResolveDataValue.ts","ng://@typexs-ng/base/libs/xsview/TreeObject.ts","ng://@typexs-ng/base/libs/xsform/FormObject.ts","ng://@typexs-ng/base/libs/exceptions/NoFormHandlerDefinedForTypeError.ts","ng://@typexs-ng/base/libs/xsview/ContentComponentRegistry.ts","ng://@typexs-ng/base/libs/xsview/decorators/ViewContent.ts","ng://@typexs-ng/base/libs/xsform/elements/Tabs.ts","ng://@typexs-ng/base/libs/xsform/elements/Tab.ts","ng://@typexs-ng/base/libs/xsform/elements/Ref.ts","ng://@typexs-ng/base/libs/xsform/elements/Input.ts","ng://@typexs-ng/base/libs/xsform/elements/Form.ts","ng://@typexs-ng/base/libs/xsform/elements/Checkbox.ts","ng://@typexs-ng/base/libs/xsform/elements/Radio.ts","ng://@typexs-ng/base/libs/xsform/elements/Select.ts","ng://@typexs-ng/base/libs/xsform/elements/Grid.ts","ng://@typexs-ng/base/libs/exceptions/NoFormTypeDefinedError.ts","ng://@typexs-ng/base/libs/xsform/FormBuilder.ts","ng://@typexs-ng/base/modules/xsform/form.service.ts","ng://@typexs-ng/base/libs/xsview/decorators/ViewComponent.ts","ng://@typexs-ng/base/libs/xsview/AbstractComponent.ts","ng://@typexs-ng/base/libs/xsview/Context.ts","ng://@typexs-ng/base/libs/xsform/AbstractFormComponent.ts","ng://@typexs-ng/base/modules/xsform/form.component.ts","ng://@typexs-ng/base/modules/xsform/input.component.ts","ng://@typexs-ng/base/modules/xsform/checkbox.component.ts","ng://@typexs-ng/base/modules/xsform/radio.component.ts","ng://@typexs-ng/base/modules/xsform/select.component.ts","ng://@typexs-ng/base/modules/xsform/grid-cell.component.ts","ng://@typexs-ng/base/modules/xsform/grid-row.component.ts","ng://@typexs-ng/base/modules/xsform/grid.component.ts","ng://@typexs-ng/base/modules/xsform/xforms.elements.ts","ng://@typexs-ng/base/modules/xsform/xforms.module.ts","ng://@typexs-ng/base/modules/xsview/view-builder.component.ts","ng://@typexs-ng/base/modules/xsview/xviews.module.ts"],"sourcesContent":["export class NavEntry {\n  path: string;\n  label: string;\n}\n","import {Component} from '@angular/core';\nimport {Router} from \"@angular/router\";\n\nimport {NavEntry} from \"./NavEntry\";\n\n@Component({\n  selector: 'nav-root',\n  templateUrl: './navigator.component.html',\n})\nexport class NavigatorComponent {\n\n  routes: NavEntry[] = []\n\n  constructor(router: Router) {\n\n    for (let route of router.config) {\n      let entry = new NavEntry();\n      entry.label = route.data.label;\n      entry.path = route.path;\n      this.routes.push(entry);\n    }\n    // console.log(this.routes)\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NavigatorComponent} from \"./navigator.component\";\nimport {RouterModule} from \"@angular/router\";\n\n\n@NgModule({\n  declarations: [NavigatorComponent],\n  imports: [BrowserModule,RouterModule],\n  exports:[NavigatorComponent],\n  providers: []\n})\nexport class NavigatorModule {\n\n\n\n\n}\n","import {FormObject} from './FormObject';\nimport {Form} from './elements/Form';\nimport {IResolver} from './IResolver';\n\nexport class ResolveDataValue implements IResolver {\n\n  private orgValue: string;\n\n  private path: string[] = [];\n\n  private fetchKey: string = null;\n\n  private property: string = null;\n\n  private object: FormObject = null;\n\n  constructor(value: string, object: FormObject, property: string) {\n    this.property = property;\n    this.object = object;\n    this.orgValue = value.replace(/^\\$/, '');\n    this.path = this.orgValue.split('.');\n    this.fetchKey = this.path.pop();\n  }\n\n  get() {\n    return this.orgValue;\n  }\n\n\n  resolve(form: Form) {\n    let elem = form.get(this.path.join('.'));\n    if (elem) {\n      this.object[this.property] = elem[this.fetchKey];\n      return elem[this.fetchKey];\n    } else {\n      throw new Error('cant resolve data');\n    }\n\n  }\n\n}\n\n","import {Context} from './Context';\n\n\nexport abstract class TreeObject {\n\n  readonly type: string;\n\n  context: Context;\n\n  index: number;\n\n  parent: TreeObject = null;\n\n  children: TreeObject[] = [];\n\n  insert(object: TreeObject) {\n    object.parent = this;\n    object.index = this.children.length;\n    this.children.push(object);\n  }\n\n  getParent(): TreeObject {\n    return this.parent;\n  }\n\n  setParent(parent: TreeObject) {\n    if (parent) {\n      this.parent = parent;\n      this.index = this.parent.children.indexOf(this);\n    }\n  }\n\n  getChildren() {\n    return this.children;\n  }\n}\n","import {PropertyDef} from 'typexs-schema/libs/PropertyDef';\n\nimport * as _ from '../../libs/LoDash';\nimport {ResolveDataValue} from './ResolveDataValue';\nimport {TreeObject} from '../xsview/TreeObject';\n\n\nexport function isFormObject(obj: TreeObject | FormObject): obj is FormObject {\n  return obj instanceof FormObject;\n}\n\nexport abstract class FormObject extends TreeObject {\n\n  id: string;\n\n  usedKeys: string[] = [];\n\n  name: string;\n\n  label: string;\n\n  help: string;\n\n  readonly: false;\n\n  private binding: PropertyDef = null;\n\n\n  getBinding() {\n    return this.binding;\n  }\n\n\n\n  getUsedKeys() {\n    return this.usedKeys;\n  }\n\n\n\n  getPath(): string {\n    let arr = [];\n\n    if (this.getBinding() instanceof PropertyDef) {\n      if (this.getParent()) {\n        const parent = this.getParent();\n        if(isFormObject(parent)){\n          arr.push(parent.getPath());\n        }else{\n         //  throw new Error('parent is not a form object');\n        }\n      }\n      arr.push(this.name);\n      if (this.getBinding().isCollection()) {\n        arr.push('$idx');\n      }\n    }\n    return _.filter(arr, (x: string) => x.trim() != '').join('.');\n  }\n\n\n  getForm(): FormObject {\n    if (this.parent && isFormObject(this.parent)) {\n      return this.parent.getForm();\n    } else if (this.type == 'form') {\n      return this;\n    } else {\n      // TODO throw error this should never happen\n      return null;\n    }\n  }\n\n  handle(key: string, value: any) {\n\n    if (value instanceof ResolveDataValue) {\n      let form = this.getForm(); //\n      form['resolver'].push(value);\n    }\n\n    this.usedKeys.push(key);\n    let methodName = 'handle' + _.capitalize(key);\n    if (this[methodName]) {\n      this[methodName](value);\n    } else {\n      this[key] = value;\n    }\n  }\n\n  /**\n   * Don't override type\n   */\n  handleType(value: string) {\n  }\n\n\n  postProcess() {\n  }\n\n\n  replace(someObject: FormObject) {\n    let parent = this.getParent();\n    let idx = parent.getChildren().indexOf(this);\n    if (idx < 0) {\n      throw new Error('can not find index, something is wrong');\n    }\n    parent.getChildren()[idx] = someObject;\n    someObject.setParent(parent);\n    return someObject;\n  }\n}\n","export class NoFormHandlerDefinedForTypeError extends Error {\n  constructor(typeName: string) {\n    super(typeName + ' not defined');\n  }\n}\n","import {NoFormHandlerDefinedForTypeError} from './../../libs/exceptions/NoFormHandlerDefinedForTypeError';\nimport {IElementDef} from './IElementDef';\nimport * as _ from '../../libs/LoDash';\n\nexport class ContentComponentRegistry {\n\n  private static $self: ContentComponentRegistry = null;\n\n  private formHandler: IElementDef[] = [];\n\n  private constructor() {\n  }\n\n  static $(): ContentComponentRegistry {\n    if (!this.$self) {\n      this.$self = new ContentComponentRegistry();\n    }\n    return this.$self;\n  }\n\n  getOrCreateDef(typeName: string): IElementDef {\n    let exists = _.find(this.formHandler, {type: typeName});\n    if (!exists) {\n      exists = {type: typeName};\n      this.formHandler.push(exists);\n    }\n    return exists;\n  }\n\n  getDef(typeName: string): IElementDef {\n    return _.find(this.formHandler, {type: typeName});\n  }\n\n  static addHandler(typeName: string, klass: Function) {\n    let def = this.$().getOrCreateDef(typeName);\n    def.handler = klass;\n    return def;\n  }\n\n\n  static addComponent(typeName: string, klass: Function) {\n    let def = this.$().getOrCreateDef(typeName);\n    def.component = klass;\n    return def;\n  }\n\n  static createHandler(typeName: string) {\n    let handler = this.$().getOrCreateDef(typeName);\n    if (!handler || !handler.handler) {\n      throw new NoFormHandlerDefinedForTypeError(typeName);\n    }\n    let obj = Reflect.construct(handler.handler, []);\n    obj.type = typeName;\n    return obj;\n  }\n\n  static createComponent(typeName: string) {\n    let handler = this.$().getOrCreateDef(typeName);\n    if (!handler || !handler.component) {\n      throw new NoFormHandlerDefinedForTypeError(typeName);\n    }\n    let obj = Reflect.construct(handler.component, []);\n    obj.type = typeName;\n    return obj;\n  }\n\n}\n\n","import {ContentComponentRegistry} from '../ContentComponentRegistry';\n\n\nexport function ViewContent(typeName: string) {\n  return function (object: Function) {\n    ContentComponentRegistry.addHandler(typeName, object);\n  };\n}\n","\nimport {FormObject} from '../FormObject';\n\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('tabs')\nexport class Tabs extends FormObject {\n\n}\n","\nimport {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('tab')\nexport class Tab extends FormObject {\n\n}\n","import {FormObject, isFormObject} from '../FormObject';\nimport {IResolver} from '../IResolver';\nimport {Form} from './Form';\n\nimport * as _ from '../../../libs/LoDash';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('ref')\nexport class Ref extends FormObject implements IResolver {\n\n  use: string;\n\n  postProcess() {\n    this.getForm()['resolver'].push(this);\n  }\n\n  resolve(form: Form) {\n    let elem = form.get(this.use);\n    if(isFormObject(elem)){\n      let e = _.clone(elem);\n      this.replace(e);\n\n      // copy properties\n      this.getUsedKeys().forEach(k => {\n        e.handle(k, this[k]);\n      });\n\n    }\n\n  }\n}\n\n\n\n\n","\nimport {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('input')\nexport class Input extends FormObject {\n\n  variant: string = 'text';\n\n\n  handleVariant(value: string) {\n    this.variant = value;\n  }\n\n}\n","import * as _ from '../../../libs/LoDash';\nimport {IResolver} from '../IResolver';\nimport {FormObject} from '../FormObject';\nimport {ResolveDataValue} from '../ResolveDataValue';\nimport {Ref} from './Ref';\n\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n\n@ViewContent('form')\nexport class Form extends FormObject {\n\n  dataContainer: any;\n\n  resolver: IResolver[] = [];\n\n  combine(otherForm: Form) {\n    let resolverCache: IResolver[] = [];\n\n    while (this.resolver.length > 0) {\n      let resolver = this.resolver.shift();\n      if (resolver instanceof ResolveDataValue) {\n        resolver.resolve(otherForm);\n      } else {\n        resolverCache.push(resolver);\n      }\n    }\n\n    while (resolverCache.length > 0) {\n\n      let resolver = resolverCache.shift();\n      if (resolver instanceof Ref) {\n        resolver.resolve(otherForm);\n      }\n    }\n\n    return this;\n  }\n\n  get(path: string) {\n    let _path = path.split('.');\n    let tmpElem: FormObject = this;\n    let element = null;\n    while (_path.length > 0) {\n      let _p = _path.shift();\n      let ret = _.find(<FormObject[]>tmpElem.getChildren(), {name: _p});\n      //if(isFormObject(ret)){\n      tmpElem = ret;\n      if (!tmpElem) {\n        break;\n      } else {\n        element = tmpElem;\n      }\n      //}\n    }\n    return _path.length == 0 && element ? element : null;\n\n  }\n\n\n}\n","import {Input} from './Input';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('checkbox')\nexport class Checkbox extends Input {\n\n\n}\n","\nimport {Input} from './Input';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('radio')\nexport class Radio extends Input {\n\n\n}\n","import {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('select')\nexport class Select extends FormObject {\n\n  enum: any;\n\n}\n","import {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('grid')\nexport class Grid extends FormObject {\n\n\n\n}\n","export class NoFormTypeDefinedError extends Error {\n}\n","import {NotYetImplementedError} from 'typexs-base/libs/exceptions/NotYetImplementedError';\nimport {FormObject} from './FormObject';\nimport {Form} from './elements';\n\nimport {ResolveDataValue} from './ResolveDataValue';\nimport {EntityDef} from 'typexs-schema/libs/EntityDef';\nimport {PropertyDef} from 'typexs-schema/libs/PropertyDef';\nimport {SchemaDef} from 'typexs-schema/libs/SchemaDef';\nimport {Registry} from 'typexs-schema/libs/Registry';\nimport * as _ from '../../libs/LoDash';\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {ContentComponentRegistry} from '../xsview/ContentComponentRegistry';\n\n\nexport class FormBuilder {\n\n  private data: any;\n\n  private form: FormObject;\n\n  private schema: SchemaDef;\n\n  buildFromJSON(data: any): Form {\n    this.data = data;\n    this.schema = Registry.getSchema('default');\n    return <Form>this._buildForm(data);\n  }\n\n  buildFromEntity(entity: EntityDef): Form {\n    this.data = entity;\n    return <Form>this._buildFormObject(entity);\n  }\n\n\n  private _buildFormObject(entity: EntityDef | PropertyDef, parent: FormObject = null) {\n\n    let formObject: FormObject = null;\n\n    if (!this.form) {\n      this.schema = Registry.getSchema(entity.schemaName);\n      this.form = formObject = ContentComponentRegistry.createHandler('form');\n      formObject.handle('name', entity.id());\n      formObject.handle('binding', entity);\n    } else if (entity instanceof PropertyDef) {\n      // TODO support also other types\n      let property = entity;\n      let formType = <string>property.getOptions('form') || 'text';\n      let methodName = 'for' + _.capitalize(formType);\n      if (this[methodName]) {\n        formObject = this[methodName](formType, property);\n      } else {\n        formObject = this.forDefault(formType, property);\n      }\n    } else if (entity instanceof EntityDef) {\n\n    }\n\n    if (formObject != null) {\n      formObject.setParent(parent);\n    } else {\n      // if formObject no created but parent is passed then use it as formobject further (grid <- add furter elements)\n      formObject = parent;\n    }\n\n\n    if (entity instanceof EntityDef) {\n      let properties = entity.getPropertyDefs();\n\n      for (let property of properties) {\n        let childObject = this._buildFormObject(property, formObject);\n        formObject.insert(childObject);\n      }\n    } else if (entity instanceof PropertyDef) {\n      // TODO for properties which points to Entity / Entities\n      //property.getEntityDef\n      //formObject;\n      let property = <PropertyDef>entity;\n      if (property.isReference()) {\n        if (property.isEntityReference()) {\n          let entity = property.targetRef.getEntity();\n          let childObject = this._buildFormObject(entity, formObject);\n          formObject.insert(childObject);\n        } else {\n          let properties = this.schema.getPropertiesFor(property.targetRef.getClass());\n          for (let property of properties) {\n            let childObject = this._buildFormObject(property, formObject);\n            formObject.insert(childObject);\n          }\n        }\n      }\n    }\n\n    formObject.postProcess();\n    return formObject;\n\n  }\n\n  private forDefault(formType: string, property: PropertyDef) {\n    let formObject = ContentComponentRegistry.createHandler(formType);\n    if (formObject) {\n      formObject.handle('variant', formType);\n      this._applyValues(formObject, property);\n      return formObject;\n    }\n    throw new NoFormTypeDefinedError(formType);\n  }\n\n  private forText(formType: string, property: PropertyDef) {\n    return this._forInput(formType, property);\n  }\n\n  private forPassword(formType: string, property: PropertyDef) {\n    return this._forInput(formType, property);\n  }\n\n  private forEmail(formType: string, property: PropertyDef) {\n    return this._forInput(formType, property);\n  }\n\n\n  private _forInput(formType: string, property: PropertyDef) {\n    let formObject = ContentComponentRegistry.createHandler('input');\n    formObject.handle('variant', formType);\n    this._applyValues(formObject, property);\n    return formObject;\n  }\n\n  private _applyValues(formObject: FormObject, property: PropertyDef) {\n    formObject.handle('name', property.name);\n    formObject.handle('id', property.id());\n    formObject.handle('label', property.label ? property.label : _.capitalize(property.name));\n    formObject.handle('binding', property);\n\n    let options = property.getOptions();\n    if (options) {\n      Object.keys(options).forEach(opt => {\n        if (/^(source|target|property)/.test(opt)) return;\n        let value = options[opt];\n        formObject.handle(opt, value);\n      });\n    }\n\n  }\n\n\n  private _buildForm(data: any, parent: FormObject = null) {\n    let keys = _.remove(Object.keys(data), (e: string) => ['children', 'type'].indexOf(e) === -1);\n\n    let formObject: FormObject = null;\n    if (data.type) {\n      // lookup handler\n      formObject = ContentComponentRegistry.createHandler(data.type);\n    } else {\n      throw new NoFormTypeDefinedError();\n    }\n\n    if (!this.form) {\n      this.form = formObject;\n    }\n\n    formObject.setParent(parent);\n\n    for (let key of keys) {\n      let value = data[key];\n      if (_.isString(value)) {\n        if (/^\\$/.test(value)) {\n          value = new ResolveDataValue(value, formObject, key);\n        }\n      }\n      formObject.handle(key, value);\n    }\n\n\n    if (data.children) {\n      let value = data.children;\n      if (_.isArray(value)) {\n        for (let entry of value) {\n          let childObject = this._buildForm(entry, formObject);\n          formObject.insert(childObject);\n        }\n      } else {\n        throw new NotYetImplementedError();\n      }\n    }\n\n    formObject.postProcess();\n    return formObject;\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Registry} from 'typexs-schema/libs/Registry';\nimport {Form} from '../../libs/xsform/elements';\nimport {FormBuilder} from '../../libs/xsform/FormBuilder';\n\n\n@Injectable()\nexport class FormService {\n\n  cache: any = {};\n\n  get(name: string, instance: any): Form {\n    // TODO lookup for form modifications\n    let entityDef = Registry.getEntityDefFor(instance);\n    let builder2 = new FormBuilder();\n    return builder2.buildFromEntity(entityDef);\n  }\n\n}\n","import {ContentComponentRegistry} from '../ContentComponentRegistry';\n\n\nexport function ViewComponent(typeName: string) {\n  return function (object: Function) {\n    ContentComponentRegistry.addComponent(typeName, object);\n  };\n}\n","import * as _ from '../../libs/LoDash';\nimport {ComponentFactoryResolver, Inject, Injector, ViewChild, ViewContainerRef} from '@angular/core';\nimport {Context} from './Context';\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {TreeObject} from './TreeObject';\nimport {ContentComponentRegistry} from './ContentComponentRegistry';\n\nconst PROP_METADATA = '__prop__metadata__';\n\nexport abstract class AbstractComponent<T extends TreeObject> {\n\n  context: Context;\n\n  elem: T;\n\n  @ViewChild('content', {read: ViewContainerRef}) vc: ViewContainerRef;\n\n\n  constructor(@Inject(Injector) public injector: Injector,\n              @Inject(ComponentFactoryResolver) public r: ComponentFactoryResolver) {\n    this.construct();\n  }\n\n  construct() {\n  }\n\n  protected setElem(elem: T) {\n    this.elem = elem;\n  }\n\n\n  buildSingle(content: T): AbstractComponent<T> {\n\n\n    const handle = ContentComponentRegistry.$().getOrCreateDef(content.type);\n    if (handle && handle.component) {\n\n\n      if (this.vc) {\n\n        const factory = this.r.resolveComponentFactory(<any>handle.component);\n        const compRef = this.vc.createComponent(factory);\n        const instance = <AbstractComponent<T>>compRef.instance;\n\n        let metadata: { [k: string]: any } = null;\n        if (instance.constructor.hasOwnProperty(PROP_METADATA)) {\n          metadata = instance.constructor[PROP_METADATA];\n        }\n\n        instance.setElem(content);\n\n        if (instance.build) {\n          let refs = instance.build(content);\n\n          if (metadata) {\n            Object.keys(metadata).forEach(key => {\n              let v = metadata[key];\n              if (!_.isEmpty(v)) {\n\n                if (_.isArray(v) && v.length === 1) {\n                  let propDecorator = _.first(v);\n                  if (_.isFunction(propDecorator.selector)) {\n                    if (propDecorator.first) {\n                      // simple ViewChild\n                      instance[key] = _.find(refs, ref => ref.constructor == propDecorator.selector);\n                      instance[key + '2'] = _.find(refs, ref => ref.constructor == propDecorator.selector);\n                    } else {\n                      // simple ViewChildren\n                      instance[key] = _.filter(refs, ref => ref.constructor == propDecorator.selector);\n                      instance[key + '2'] = _.filter(refs, ref => ref.constructor == propDecorator.selector);\n                    }\n                  }\n                } else {\n                  console.error('can\\'t resolve metadata', instance.constructor, key, v);\n                }\n              }\n            });\n          }\n        }\n        return instance;\n      } else {\n        console.error('No view content setted');\n      }\n    } else {\n      throw new NoFormTypeDefinedError(content.type);\n    }\n    return null;\n\n  }\n\n\n  build(content: T): AbstractComponent<T>[] {\n    let refs: AbstractComponent<T>[] = [];\n    content.getChildren().forEach(contentObject => {\n      let ref = this.buildSingle(<T>contentObject);\n      refs.push(ref);\n    });\n    return refs;\n  }\n\n}\n","\nimport * as _ from '../../libs/LoDash';\nexport type ALIGNMENT = 'vertical' | 'horizontal'\n\nexport type LABEL_DISPLAY = 'top' | 'inline' | 'none'\n\nexport class Context {\n\n  name: string;\n\n  idx: number = -1;\n\n  parent: Context;\n\n  labelDisplay: LABEL_DISPLAY;\n\n  // alignment:\n\n  child(_name: string = null, idx: number = -1) {\n    let name = new Context();\n    name.parent = this;\n    name.name = _name;\n    name.idx = idx;\n    return name;\n  }\n\n\n  path(): string {\n    let arr: string[] = [];\n    if (this.parent) {\n      arr = this.parent.path().split('.');\n    }\n\n    if (this.idx > -1) {\n      arr[arr.length - 1] = arr[arr.length - 1] + '[' + this.idx + ']';\n      // arr.push(this.name + '[' + this.idx + ']');\n    } else {\n      arr.push(this.name);\n    }\n    //  console.log(arr);\n    return _.filter(arr, (x: string) => !_.isEmpty(x)).join('.');\n  }\n\n\n  get(key: string, _default: any = null): any {\n    if (_.has(this, key)) {\n      return _.get(this, key, _default);\n    } else if (this.parent) {\n      return this.parent.get(key);\n    }\n    return _default;\n  }\n\n}\n","import {DataContainer} from 'typexs-schema/libs/DataContainer';\n\nimport * as _ from '../../libs/LoDash';\nimport {PropertyDef} from 'typexs-schema/libs/PropertyDef';\n\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {AbstractComponent} from '../xsview/AbstractComponent';\nimport {FormObject, isFormObject} from './FormObject';\nimport {ContentComponentRegistry} from '../xsview/ContentComponentRegistry';\nimport {Context} from '../xsview/Context';\n\n\nexport abstract class AbstractFormComponent<T extends FormObject> extends AbstractComponent<T> {\n\n  static _inc: number = 0;\n\n\n  data: DataContainer<any>;\n\n  inc: number = 0;\n\n\n\n  construct(){\n    this.inc = AbstractFormComponent._inc++;\n  }\n\n  get id() {\n    return this.elem.id;\n  }\n\n\n  get name() {\n    return this.elem.name;\n  }\n\n\n  get label() {\n    return this.elem.label;\n  }\n\n\n  get labelDisplay() {\n    return this.context.get('labelDisplay', 'top');\n  }\n\n\n  get help() {\n    return this.elem.help;\n  }\n\n\n  get isReadOnly() {\n    return this.elem.readonly;\n  }\n\n\n  get isValid() {\n    return this.data.checked(this.name) && this.data.valid(this.name);\n  }\n\n\n  protected setFormObject(elem: T) {\n    this.setElem(elem);\n  }\n\n\n  setData(elem: T, parent: Context, idx: number = -1) {\n    this.setFormObject(elem);\n    if (parent) {\n      this.context = parent.child(elem.name, idx);\n    } else {\n      this.context = new Context();\n      if (elem.getBinding() instanceof PropertyDef) {\n        this.context.name = elem.name;\n        this.context.idx = idx;\n      }\n    }\n  }\n\n\n  get value() {\n    let path = this.context.path();\n    return _.get(this.data.instance, path, null);\n  }\n\n\n  set value(v: any) {\n    let path = this.context.path();\n    _.set(this.data.instance, path, v);\n  }\n\n\n  build(form: FormObject) : AbstractComponent<T>[] {\n    let comp:AbstractComponent<T>[] = []\n    form.getChildren().forEach(formObject => {\n      if (isFormObject(formObject)) {\n\n        let handle = ContentComponentRegistry.$().getOrCreateDef(formObject.type);\n        if (handle && handle.component) {\n          if (this.vc) {\n            let factory = this.r.resolveComponentFactory(<any>handle.component);\n            let ref = this.vc.createComponent(factory);\n            let instance = <AbstractFormComponent<any>>ref.instance;\n            instance.data = this.data;\n            instance.setData(formObject, this.context);\n            instance.build(formObject);\n            comp.push(instance);\n          } else {\n            console.error('No view content setted');\n          }\n        } else {\n          throw new NoFormTypeDefinedError(formObject.type);\n        }\n      }\n    });\n    return comp;\n  }\n\n}\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, Input, OnInit, Output} from '@angular/core';\nimport {DataContainer} from 'typexs-schema/libs/DataContainer';\nimport {FormService} from './form.service';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Form} from '../../libs/xsform/elements';\n\n@ViewComponent('form')\n@Component({\n  selector: 'xform',\n  templateUrl: './form.component.html',\n  //host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  //outputs: ['ngSubmit'],\n})\nexport class FormComponent extends AbstractFormComponent<Form> implements OnInit {\n\n  @Output()\n  ngSubmit = new EventEmitter();\n\n  @Input()\n  formName: string;\n\n  @Input()\n  instance: any;\n\n\n  constructor(@Inject(FormService) private formService: FormService,\n              @Inject(Injector) public injector: Injector,\n              @Inject(ComponentFactoryResolver) public r: ComponentFactoryResolver) {\n    super(injector, r);\n  }\n\n\n  ngOnInit() {\n\n    // TODO instance must be present\n    this.data = new DataContainer(this.instance);\n    this.elem = this.formService.get(this.formName, this.instance);\n\n    // TODO restructure form\n    this.build(this.elem);\n  }\n\n\n  async onSubmit($event: Event): Promise<boolean> {\n    await this.data.validate();\n    this.ngSubmit.emit({event:$event, data:this.data});\n    return false;\n  }\n\n\n}\n\n","import {Component} from '@angular/core';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Input} from '../../libs/xsform/elements';\n\n\n\n@ViewComponent('input')\n@Component({\n  selector: 'xinput',\n  templateUrl: './input.component.html',\n})\nexport class InputComponent extends AbstractFormComponent<Input>/* implements OnInit, OnChanges */ {\n\n  get type(){\n    return this.elem.variant;\n  }\n\n\n\n\n}\n","import {Component, Input} from '@angular/core';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Checkbox} from '../../libs/xsform/elements';\n\n\n@ViewComponent('checkbox')\n@Component({\n  selector: 'xcheckbox',\n  templateUrl: './checkbox.component.html',\n})\nexport class CheckboxComponent extends AbstractFormComponent<Checkbox> {\n\n  get type(){\n    return this.elem.variant;\n  }\n\n\n  get isChecked(){\n    return this.data.instance[this.name];\n  }\n\n  set isChecked(value:boolean){\n    if(value){\n      this.data.instance[this.name] = true;\n    }else{\n      this.data.instance[this.name] = false;\n    }\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Radio} from '../../libs/xsform/elements/Radio';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\n\n\n@ViewComponent('radio')\n@Component({\n  selector: 'xradio',\n  templateUrl: './radio.component.html',\n})\nexport class RadioComponent extends AbstractFormComponent<Radio> {\n\n  on: string = 'Yes';\n\n  off: string = 'No';\n\n  get type() {\n    return this.elem.variant;\n  }\n\n  get isChecked() {\n    return this.data.instance[this.name];\n  }\n\n  set isChecked(value: boolean) {\n    if (value) {\n      this.data.instance[this.name] = true;\n    } else {\n      this.data.instance[this.name] = false;\n    }\n  }\n}\n","import {Component, OnInit} from '@angular/core';\n\nimport * as _ from '../../libs/LoDash';\nimport {Observable} from 'rxjs/Observable';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Select} from '../../libs/xsform/elements';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\n\nexport class Option {\n  value: string = '';\n  label: string = '---';\n  default: boolean;\n}\n\n@ViewComponent('select')\n@Component({\n  selector: 'xselect',\n  templateUrl: './select.component.html',\n})\nexport class SelectComponent extends AbstractFormComponent<Select> implements OnInit {\n\n  cachedOptions: Option[] = [];\n\n\n  get supportsMultiple(): boolean {\n    return this.elem.getBinding().isCollection();\n  }\n\n  ngOnInit() {\n    this.cachedOptions = [];\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    let enums = this.retrieveEnum();\n\n    if (enums) {\n      if (enums instanceof Observable) {\n        enums.subscribe(e => {\n          let o = new Option();\n          if (_.isString(e)) {\n            o.label = o.value = e;\n          } else if (_.has(e, 'label') || _.has(e, 'value')) {\n            o.label = _.get(e, 'label', _.get(e, 'value'));\n            o.value = _.get(e, 'value', _.get(e, 'label'));\n          } else {\n            throw new Error('not found');\n          }\n          this.cachedOptions.push(o);\n        });\n      } else {\n        enums.forEach(e => {\n          let o = new Option();\n          if (_.isString(e)) {\n            o.label = o.value = e;\n          } else if (_.has(e, 'label') || _.has(e, 'value')) {\n            o.label = _.get(e, 'label', _.get(e, 'value'));\n            o.value = _.get(e, 'value', _.get(e, 'label'));\n          } else {\n            throw new Error('not found');\n          }\n          this.cachedOptions.push(o);\n        });\n      }\n    }\n  }\n\n\n  retrieveEnum(): any[] {\n    if (_.isArray(this.elem.enum)) {\n      return this.elem.enum;\n    } else if (_.isFunction(this.elem.enum)) {\n      return this.injector.get(this.elem.enum).get(this.name);\n    } else if (_.isString(this.elem.enum)) {\n      // check if an entry with the propertyname exists\n      let lookupPath: string | string[] = [];\n      if (this.context.parent) {\n        lookupPath.push(this.context.parent.path());\n      }\n      lookupPath.push(this.elem.enum)\n      lookupPath = (<string[]>lookupPath).join('.');\n\n      if (_.has(this.data.instance, lookupPath)) {\n        // TODO observe if property is changed, if it does then reset enum\n        return _.get(this.data.instance, lookupPath, []);\n      } else {\n        throw new Error('not found enum reference');\n      }\n    }\n    return [];\n  }\n}\n","import {Component, HostBinding} from '@angular/core';\nimport {GridComponent} from './grid.component';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\n\n\n@Component({\n  selector: 'xgridcell',\n  templateUrl: './grid-cell.component.html',\n})\nexport class GridCellComponent extends AbstractFormComponent<any> {\n\n  private grid: GridComponent;\n\n  @HostBinding('class')\n\tget hostClasses(): string {\n\t\treturn [\n\t\t  'col'\n\t\t].join(' ');\n\t}\n\n  setGridComponent(grid: GridComponent) {\n    this.grid = grid;\n  }\n\n\n\n\n}\n","import {Component, HostBinding} from '@angular/core';\nimport {GridComponent} from './grid.component';\nimport {GridCellComponent} from './grid-cell.component';\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {FormObject, isFormObject} from '../../libs/xsform/FormObject';\nimport {AbstractComponent} from '../../libs/xsview/AbstractComponent';\nimport {ContentComponentRegistry} from '../../libs/xsview/ContentComponentRegistry';\n\n\n@Component({\n  selector: 'xgridrow',\n  templateUrl: './grid-row.component.html',\n})\nexport class GridRowComponent extends AbstractFormComponent<any> {\n\n  private grid: GridComponent;\n\n  setGridComponent(grid: GridComponent) {\n    this.grid = grid;\n  }\n\n  @HostBinding('class')\n  get hostClasses(): string {\n    return [\n      'form-row'\n    ].join(' ');\n  }\n\n\n  get idx() {\n    return this.context.idx;\n  }\n\n  removeRow() {\n    this.grid.removeRow(this.context.idx);\n  }\n\n  build(form: FormObject):AbstractComponent<any>[] {\n    let comp:AbstractComponent<any>[] = []\n    form.getChildren().forEach(formObject => {\n\n      if (isFormObject(formObject)) {\n        let handle = ContentComponentRegistry.$().getOrCreateDef(formObject.type);\n        if (handle && handle.component) {\n\n          let cGridCellFactory = this.r.resolveComponentFactory(GridCellComponent);\n          let cGridCell = this.vc.createComponent(cGridCellFactory);\n          cGridCell.instance.data = this.data;\n          cGridCell.instance.setGridComponent(this.grid);\n          cGridCell.instance.setData(formObject, this.context);\n\n          if (cGridCell.instance.vc) {\n            let factory = this.r.resolveComponentFactory(<any>handle.component);\n            let ref = cGridCell.instance.vc.createComponent(factory);\n            let instance = <AbstractFormComponent<any>>ref.instance;\n            instance.data = this.data;\n            instance.setData(formObject, this.context);\n            instance.build(formObject);\n            comp.push(instance);\n          } else {\n            console.error('No view content setted');\n          }\n        } else {\n          throw new NoFormTypeDefinedError(formObject.type);\n        }\n      }\n    });\n    return comp;\n  }\n\n}\n","import {Component, ComponentRef, OnInit} from '@angular/core';\nimport {GridRowComponent} from './grid-row.component';\n\nimport * as _ from '../../libs/LoDash';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Grid} from '../../libs/xsform/elements';\nimport {AbstractComponent} from '../../libs/xsview/AbstractComponent';\nimport {FormObject, isFormObject} from '../../libs/xsform/FormObject';\n@ViewComponent('grid')\n@Component({\n  selector: 'xgrid',\n  templateUrl: './grid.component.html',\n})\nexport class GridComponent extends AbstractFormComponent<Grid> implements OnInit {\n\n\n  entries: ComponentRef<GridRowComponent>[] = [];\n\n  header:string[] = [];\n\n\n  ngOnInit() {\n  }\n\n\n  addRow(index: number = -1) {\n    let factory = this.r.resolveComponentFactory(GridRowComponent);\n    let cGridRow = this.vc.createComponent(factory);\n    cGridRow.instance.data = this.data;\n    cGridRow.instance.setGridComponent(this);\n    cGridRow.instance.setData(this.elem, this.context, this.entries.length);\n    this.entries.push(cGridRow);\n\n    let object = Reflect.construct(this.elem.getBinding().targetRef.getClass(), []);\n    let path = this.context.path();\n    if (this.elem.getBinding().isCollection()) {\n      let arraySetted = _.get(this.data.instance, path, null);\n      if (!arraySetted) {\n        arraySetted = [];\n      }\n      arraySetted[cGridRow.instance.context.idx] = object;\n      _.set(this.data.instance, path, arraySetted);\n    } else {\n      _.set(this.data.instance, path, object);\n    }\n    cGridRow.instance.build(this.elem);\n    return cGridRow.instance;\n  }\n\n\n  removeRow(idx: number) {\n    // TODO check if exists\n    let path = this.context.path();\n\n    let components = this.entries.splice(idx, 1);\n    let component = components.shift();\n\n    this.vc.remove(idx);\n    if (this.elem.getBinding().isCollection()) {\n      let arraySetted = _.get(this.data.instance, path, null);\n      if (!arraySetted) {\n        arraySetted = [];\n      }\n      arraySetted.splice(idx, 1);\n\n      _.set(this.data.instance, path, arraySetted);\n    } else {\n      _.set(this.data.instance, path, null);\n    }\n\n    for (let i = this.entries.length - 1; i >= 0; i--) {\n      this.entries[i].instance.context.idx = i;\n    }\n    component.destroy();\n  }\n\n\n  build(form: FormObject):AbstractComponent<any>[] {\n    this.context.labelDisplay = 'none';\n\n\n    form.getChildren().forEach(obj => {\n      if(isFormObject(obj)){\n        this.header.push(obj.label);\n      }\n    });\n\n\n    let dataEntries = this.elem.getBinding().get(this.data.instance);\n\n    let c = this.addRow();\n    return [c];\n  }\n\n}\n","\n// to integrate the elements\nimport {FORM_ELEMENTS} from '../../libs/xsform/elements';\n\nFORM_ELEMENTS;\n\nimport {FormComponent} from './form.component';\nimport {InputComponent} from './input.component';\nimport {CheckboxComponent} from './checkbox.component';\nimport {RadioComponent} from './radio.component';\nimport {SelectComponent} from './select.component';\nimport {GridComponent} from './grid.component';\nimport {GridRowComponent} from './grid-row.component';\nimport {GridCellComponent} from './grid-cell.component';\n\n\nexport const XFORMCOMPONENT = [\n  FormComponent,\n  InputComponent,\n  CheckboxComponent,\n  RadioComponent,\n  SelectComponent,\n  GridComponent,\n  GridRowComponent,\n  GridCellComponent\n]\n\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {XFORMCOMPONENT} from './xforms.elements';\nimport {FormService} from './form.service';\n\n\n@NgModule({\n  declarations: XFORMCOMPONENT,\n  imports: [\n    FormsModule,\n    BrowserModule\n  ],\n  entryComponents: XFORMCOMPONENT,\n  exports: XFORMCOMPONENT,\n  providers: [\n    FormService\n  ]\n})\nexport class xFormsModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TreeObject} from '../../libs/xsview/TreeObject';\nimport {AbstractComponent} from '../../libs/xsview/AbstractComponent';\n\n\n\n\n@Component({\n  selector: 'view-builder',\n  templateUrl: './view-builder.component.html',\n  // host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  // outputs: ['ngSubmit'],\n})\nexport class ViewBuilderComponent<T extends TreeObject> extends AbstractComponent<T> implements OnInit {\n\n  private _build:boolean = false;\n\n\n  _instance: any;\n\n  @Input() set instance(value: any) {\n    this._instance = value;\n    this._build = false;\n    this.__build();\n  }\n\n  get instance(): any {\n    return this._instance;\n  }\n\n  ngOnInit() {\n    this.__build();\n  }\n\n  private __build(){\n    if(!this._build){\n      this.vc.clear();\n      this.buildSingle(this._instance);\n      this._build = true;\n    }\n  }\n}\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ViewBuilderComponent} from './view-builder.component';\n\n\n@NgModule({\n  declarations: [ViewBuilderComponent],\n  imports: [\n    BrowserModule\n  ],\n  entryComponents: [],\n  exports: [ViewBuilderComponent],\n  providers: []\n})\nexport class xViewsModule {\n}\n"],"names":["tslib_1.__values","tslib_1.__extends","_.filter","_.capitalize","_.find","_.clone","Input","_.remove","_.isString","_.isArray","_.isEmpty","_.first","_.isFunction","_.has","_.get","_.set"],"mappings":"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"}
