{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@typexs-ng/base/modules/navigator/NavEntry.ts","ng://@typexs-ng/base/modules/navigator/navigator.component.ts","ng://@typexs-ng/base/modules/navigator/navigator.module.ts","ng://@typexs-ng/base/libs/xsform/ResolveDataValue.ts","ng://@typexs-ng/base/libs/xsform/FormObject.ts","ng://@typexs-ng/base/libs/xsview/TreeObject.ts","ng://@typexs-ng/base/libs/exceptions/NoFormHandlerDefinedForTypeError.ts","ng://@typexs-ng/base/libs/xsview/ContentComponentRegistry.ts","ng://@typexs-ng/base/libs/xsview/decorators/ViewContent.ts","ng://@typexs-ng/base/libs/xsform/elements/Tabs.ts","ng://@typexs-ng/base/libs/xsform/elements/Tab.ts","ng://@typexs-ng/base/libs/xsform/elements/Ref.ts","ng://@typexs-ng/base/libs/xsform/elements/Input.ts","ng://@typexs-ng/base/libs/exceptions/NoFormTypeDefinedError.ts","ng://@typexs-ng/base/libs/xsform/elements/Form.ts","ng://@typexs-ng/base/libs/xsform/elements/Checkbox.ts","ng://@typexs-ng/base/libs/xsform/elements/Radio.ts","ng://@typexs-ng/base/libs/xsform/elements/Select.ts","ng://@typexs-ng/base/libs/xsform/elements/Grid.ts","ng://@typexs-ng/base/libs/xsform/FormBuilder.ts","ng://@typexs-ng/base/modules/xsform/form.service.ts","ng://@typexs-ng/base/libs/xsview/decorators/ViewComponent.ts","ng://@typexs-ng/base/libs/xsview/AbstractComponent.ts","ng://@typexs-ng/base/libs/xsview/Context.ts","ng://@typexs-ng/base/libs/xsform/AbstractFormComponent.ts","ng://@typexs-ng/base/modules/xsform/form.component.ts","ng://@typexs-ng/base/modules/xsform/input.component.ts","ng://@typexs-ng/base/modules/xsform/checkbox.component.ts","ng://@typexs-ng/base/modules/xsform/radio.component.ts","ng://@typexs-ng/base/modules/xsform/select.component.ts","ng://@typexs-ng/base/modules/xsform/grid-cell.component.ts","ng://@typexs-ng/base/modules/xsform/grid-row.component.ts","ng://@typexs-ng/base/modules/xsform/grid.component.ts","ng://@typexs-ng/base/modules/xsform/xforms.elements.ts","ng://@typexs-ng/base/modules/xsform/xforms.module.ts","ng://@typexs-ng/base/modules/xsview/view-builder.component.ts","ng://@typexs-ng/base/modules/xsview/xviews.module.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","done","value","pop","push","e","step","__values","o","m","NavEntry","NavigatorComponent","router","_a","tslib_1.__values","config","_b","route","entry","data","path","routes","Component","args","selector","templateUrl","Router","NavigatorModule","NgModule","declarations","imports","BrowserModule","RouterModule","exports","providers","ResolveDataValue","object","property","orgValue","replace","split","fetchKey","get","resolve","form","elem","join","Error","isFormObject","obj","FormObject","_super","tslib_1.__extends","getBinding","binding","getUsedKeys","usedKeys","getPath","arr","PropertyDef","getParent","parent_1","name","isCollection","_.filter","x","trim","getForm","parent","type","handle","methodName","_.capitalize","handleType","postProcess","someObject","idx","getChildren","indexOf","setParent","TreeObject","insert","index","children","NoFormHandlerDefinedForTypeError","typeName","ContentComponentRegistry","$","$self","getOrCreateDef","exists","_.find","formHandler","getDef","addHandler","klass","def","handler","addComponent","component","createHandler","construct","createComponent","ViewContent","Tabs","Tab","Ref","_this","use","e_1","_.clone","forEach","k","Input","handleVariant","variant","NoFormTypeDefinedError","Form","combine","otherForm","resolverCache","resolver","shift","_path","tmpElem","element","_p","Checkbox","Radio","Select","Grid","FormBuilder","buildFromJSON","schema","Registry","getSchema","_buildForm","buildFromEntity","entity","_buildFormObject","formObject","formType","getOptions","forDefault","schemaName","id","EntityDef","properties","getPropertyDefs","properties_1","properties_1_1","childObject","isReference","isEntityReference","entity_1","targetRef","getEntity","getPropertiesFor","getClass","properties_2","properties_2_1","property_1","_applyValues","forText","_forInput","forPassword","forEmail","options","keys","opt","test","_.remove","keys_1","keys_1_1","_.isString","_.isArray","NotYetImplementedError","value_1","value_1_1","FormService","instance","entityDef","getEntityDefFor","Injectable","ViewComponent","PROP_METADATA","AbstractComponent","injector","setElem","buildSingle","content","vc","factory","resolveComponentFactory","instance_1","metadata_1","build","refs_1","_.isEmpty","propDecorator_1","_.first","_.isFunction","first","ref","console","error","refs","contentObject","Injector","Inject","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","Context","child","_name","_default","_.has","_.get","AbstractFormComponent","inc","_inc","context","help","readonly","checked","valid","setFormObject","setData","_.set","comp","FormComponent","formService","EventEmitter","ngOnInit","DataContainer","formName","onSubmit","$event","generator","validate","ngSubmit","emit","event","P","_arguments","Promise","reject","fulfilled","rejected","result","then","apply","Output","metadataKey","metadataValue","metadata","InputComponent","CheckboxComponent","RadioComponent","Option","SelectComponent","cachedOptions","loadOptions","enums","retrieveEnum","Observable","subscribe","enum","lookupPath","GridCellComponent","setGridComponent","grid","HostBinding","GridRowComponent","removeRow","cGridCellFactory","cGridCell","GridComponent","addRow","cGridRow","entries","arraySetted","splice","remove","destroy","labelDisplay","header","XFORMCOMPONENT","xFormsModule","FormsModule","entryComponents","ViewBuilderComponent","_instance","_build","__build","clear","xViewsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class NavEntry {\n  path: string;\n  label: string;\n}\n","import {Component} from '@angular/core';\nimport {Router} from \"@angular/router\";\n\nimport {NavEntry} from \"./NavEntry\";\n\n@Component({\n  selector: 'nav-root',\n  templateUrl: './navigator.component.html',\n})\nexport class NavigatorComponent {\n\n  routes: NavEntry[] = []\n\n  constructor(router: Router) {\n\n    for (let route of router.config) {\n      let entry = new NavEntry();\n      entry.label = route.data.label;\n      entry.path = route.path;\n      this.routes.push(entry);\n    }\n    // console.log(this.routes)\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NavigatorComponent} from \"./navigator.component\";\nimport {RouterModule} from \"@angular/router\";\n\n\n@NgModule({\n  declarations: [NavigatorComponent],\n  imports: [BrowserModule,RouterModule],\n  exports:[NavigatorComponent],\n  providers: []\n})\nexport class NavigatorModule {\n\n\n\n\n}\n","import {FormObject} from './FormObject';\nimport {Form} from './elements/Form';\nimport {IResolver} from './IResolver';\n\nexport class ResolveDataValue implements IResolver {\n\n  private orgValue: string;\n\n  private path: string[] = [];\n\n  private fetchKey: string = null;\n\n  private property: string = null;\n\n  private object: FormObject = null;\n\n  constructor(value: string, object: FormObject, property: string) {\n    this.property = property;\n    this.object = object;\n    this.orgValue = value.replace(/^\\$/, '');\n    this.path = this.orgValue.split('.');\n    this.fetchKey = this.path.pop();\n  }\n\n  get() {\n    return this.orgValue;\n  }\n\n\n  resolve(form: Form) {\n    let elem = form.get(this.path.join('.'));\n    if (elem) {\n      this.object[this.property] = elem[this.fetchKey];\n      return elem[this.fetchKey];\n    } else {\n      throw new Error('cant resolve data');\n    }\n\n  }\n\n}\n\n","import {PropertyDef} from 'typexs-schema/libs/PropertyDef';\n\nimport * as _ from '../../libs/LoDash';\nimport {ResolveDataValue} from './ResolveDataValue';\nimport {TreeObject} from '../xsview/TreeObject';\n\n\nexport function isFormObject(obj: TreeObject | FormObject): obj is FormObject {\n  return obj instanceof FormObject;\n}\n\nexport abstract class FormObject extends TreeObject {\n\n  id: string;\n\n  usedKeys: string[] = [];\n\n  name: string;\n\n  label: string;\n\n  help: string;\n\n  readonly: false;\n\n  private binding: PropertyDef = null;\n\n\n  getBinding() {\n    return this.binding;\n  }\n\n\n\n  getUsedKeys() {\n    return this.usedKeys;\n  }\n\n\n\n  getPath(): string {\n    let arr = [];\n\n    if (this.getBinding() instanceof PropertyDef) {\n      if (this.getParent()) {\n        const parent = this.getParent();\n        if(isFormObject(parent)){\n          arr.push(parent.getPath());\n        }else{\n         //  throw new Error('parent is not a form object');\n        }\n      }\n      arr.push(this.name);\n      if (this.getBinding().isCollection()) {\n        arr.push('$idx');\n      }\n    }\n    return _.filter(arr, (x: string) => x.trim() != '').join('.');\n  }\n\n\n  getForm(): FormObject {\n    if (this.parent && isFormObject(this.parent)) {\n      return this.parent.getForm();\n    } else if (this.type == 'form') {\n      return this;\n    } else {\n      // TODO throw error this should never happen\n      return null;\n    }\n  }\n\n  handle(key: string, value: any) {\n\n    if (value instanceof ResolveDataValue) {\n      let form = this.getForm(); //\n      form['resolver'].push(value);\n    }\n\n    this.usedKeys.push(key);\n    let methodName = 'handle' + _.capitalize(key);\n    if (this[methodName]) {\n      this[methodName](value);\n    } else {\n      this[key] = value;\n    }\n  }\n\n  /**\n   * Don't override type\n   */\n  handleType(value: string) {\n  }\n\n\n  postProcess() {\n  }\n\n\n  replace(someObject: FormObject) {\n    let parent = this.getParent();\n    let idx = parent.getChildren().indexOf(this);\n    if (idx < 0) {\n      throw new Error('can not find index, something is wrong');\n    }\n    parent.getChildren()[idx] = someObject;\n    someObject.setParent(parent);\n    return someObject;\n  }\n}\n","import {Context} from './Context';\n\n\nexport abstract class TreeObject {\n\n  readonly type: string;\n\n  context: Context;\n\n  index: number;\n\n  parent: TreeObject = null;\n\n  children: TreeObject[] = [];\n\n  insert(object: TreeObject) {\n    object.parent = this;\n    object.index = this.children.length;\n    this.children.push(object);\n  }\n\n  getParent(): TreeObject {\n    return this.parent;\n  }\n\n  setParent(parent: TreeObject) {\n    if (parent) {\n      this.parent = parent;\n      this.index = this.parent.children.indexOf(this);\n    }\n  }\n\n  getChildren() {\n    return this.children;\n  }\n}\n","export class NoFormHandlerDefinedForTypeError extends Error {\n  constructor(typeName: string) {\n    super(typeName + ' not defined');\n  }\n}\n","import {NoFormHandlerDefinedForTypeError} from './../../libs/exceptions/NoFormHandlerDefinedForTypeError';\nimport {IElementDef} from './IElementDef';\nimport * as _ from '../../libs/LoDash';\n\nexport class ContentComponentRegistry {\n\n  private static $self: ContentComponentRegistry = null;\n\n  private formHandler: IElementDef[] = [];\n\n  private constructor() {\n  }\n\n  static $(): ContentComponentRegistry {\n    if (!this.$self) {\n      this.$self = new ContentComponentRegistry();\n    }\n    return this.$self;\n  }\n\n  getOrCreateDef(typeName: string): IElementDef {\n    let exists = _.find(this.formHandler, {type: typeName});\n    if (!exists) {\n      exists = {type: typeName};\n      this.formHandler.push(exists);\n    }\n    return exists;\n  }\n\n  getDef(typeName: string): IElementDef {\n    return _.find(this.formHandler, {type: typeName});\n  }\n\n  static addHandler(typeName: string, klass: Function) {\n    let def = this.$().getOrCreateDef(typeName);\n    def.handler = klass;\n    return def;\n  }\n\n\n  static addComponent(typeName: string, klass: Function) {\n    let def = this.$().getOrCreateDef(typeName);\n    def.component = klass;\n    return def;\n  }\n\n  static createHandler(typeName: string) {\n    let handler = this.$().getOrCreateDef(typeName);\n    if (!handler || !handler.handler) {\n      throw new NoFormHandlerDefinedForTypeError(typeName);\n    }\n    let obj = Reflect.construct(handler.handler, []);\n    obj.type = typeName;\n    return obj;\n  }\n\n  static createComponent(typeName: string) {\n    let handler = this.$().getOrCreateDef(typeName);\n    if (!handler || !handler.component) {\n      throw new NoFormHandlerDefinedForTypeError(typeName);\n    }\n    let obj = Reflect.construct(handler.component, []);\n    obj.type = typeName;\n    return obj;\n  }\n\n}\n\n","import {ContentComponentRegistry} from '../ContentComponentRegistry';\n\n\nexport function ViewContent(typeName: string) {\n  return function (object: Function) {\n    ContentComponentRegistry.addHandler(typeName, object);\n  };\n}\n","\nimport {FormObject} from '../FormObject';\n\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('tabs')\nexport class Tabs extends FormObject {\n\n}\n","\nimport {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('tab')\nexport class Tab extends FormObject {\n\n}\n","import {FormObject, isFormObject} from '../FormObject';\nimport {IResolver} from '../IResolver';\nimport {Form} from './Form';\n\nimport * as _ from '../../../libs/LoDash';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('ref')\nexport class Ref extends FormObject implements IResolver {\n\n  use: string;\n\n  postProcess() {\n    this.getForm()['resolver'].push(this);\n  }\n\n  resolve(form: Form) {\n    let elem = form.get(this.use);\n    if(isFormObject(elem)){\n      let e = _.clone(elem);\n      this.replace(e);\n\n      // copy properties\n      this.getUsedKeys().forEach(k => {\n        e.handle(k, this[k]);\n      });\n\n    }\n\n  }\n}\n\n\n\n\n","\nimport {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('input')\nexport class Input extends FormObject {\n\n  variant: string = 'text';\n\n\n  handleVariant(value: string) {\n    this.variant = value;\n  }\n\n}\n","export class NoFormTypeDefinedError extends Error {\n}\n","import * as _ from '../../../libs/LoDash';\nimport {IResolver} from '../IResolver';\nimport {FormObject} from '../FormObject';\nimport {ResolveDataValue} from '../ResolveDataValue';\nimport {Ref} from './Ref';\n\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n\n@ViewContent('form')\nexport class Form extends FormObject {\n\n  dataContainer: any;\n\n  resolver: IResolver[] = [];\n\n  combine(otherForm: Form) {\n    let resolverCache: IResolver[] = [];\n\n    while (this.resolver.length > 0) {\n      let resolver = this.resolver.shift();\n      if (resolver instanceof ResolveDataValue) {\n        resolver.resolve(otherForm);\n      } else {\n        resolverCache.push(resolver);\n      }\n    }\n\n    while (resolverCache.length > 0) {\n\n      let resolver = resolverCache.shift();\n      if (resolver instanceof Ref) {\n        resolver.resolve(otherForm);\n      }\n    }\n\n    return this;\n  }\n\n  get(path: string) {\n    let _path = path.split('.');\n    let tmpElem: FormObject = this;\n    let element = null;\n    while (_path.length > 0) {\n      let _p = _path.shift();\n      let ret = _.find(<FormObject[]>tmpElem.getChildren(), {name: _p});\n      //if(isFormObject(ret)){\n      tmpElem = ret;\n      if (!tmpElem) {\n        break;\n      } else {\n        element = tmpElem;\n      }\n      //}\n    }\n    return _path.length == 0 && element ? element : null;\n\n  }\n\n\n}\n","import {Input} from './Input';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('checkbox')\nexport class Checkbox extends Input {\n\n\n}\n","\nimport {Input} from './Input';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('radio')\nexport class Radio extends Input {\n\n\n}\n","import {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('select')\nexport class Select extends FormObject {\n\n  enum: any;\n\n}\n","import {FormObject} from '../FormObject';\nimport {ViewContent} from '../../xsview/decorators/ViewContent';\n\n@ViewContent('grid')\nexport class Grid extends FormObject {\n\n\n\n}\n","import {NotYetImplementedError} from 'typexs-base/libs/exceptions/NotYetImplementedError';\nimport {FormObject} from './FormObject';\nimport {Form} from './elements';\n\nimport {ResolveDataValue} from './ResolveDataValue';\nimport {EntityDef} from 'typexs-schema/libs/EntityDef';\nimport {PropertyDef} from 'typexs-schema/libs/PropertyDef';\nimport {SchemaDef} from 'typexs-schema/libs/SchemaDef';\nimport {Registry} from 'typexs-schema/libs/Registry';\nimport * as _ from '../../libs/LoDash';\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {ContentComponentRegistry} from '../xsview/ContentComponentRegistry';\n\n\nexport class FormBuilder {\n\n  private data: any;\n\n  private form: FormObject;\n\n  private schema: SchemaDef;\n\n  buildFromJSON(data: any): Form {\n    this.data = data;\n    this.schema = Registry.getSchema('default');\n    return <Form>this._buildForm(data);\n  }\n\n  buildFromEntity(entity: EntityDef): Form {\n    this.data = entity;\n    return <Form>this._buildFormObject(entity);\n  }\n\n\n  private _buildFormObject(entity: EntityDef | PropertyDef, parent: FormObject = null) {\n\n    let formObject: FormObject = null;\n\n    if (!this.form) {\n      this.schema = Registry.getSchema(entity.schemaName);\n      this.form = formObject = ContentComponentRegistry.createHandler('form');\n      formObject.handle('name', entity.id());\n      formObject.handle('binding', entity);\n    } else if (entity instanceof PropertyDef) {\n      // TODO support also other types\n      let property = entity;\n      let formType = <string>property.getOptions('form') || 'text';\n      let methodName = 'for' + _.capitalize(formType);\n      if (this[methodName]) {\n        formObject = this[methodName](formType, property);\n      } else {\n        formObject = this.forDefault(formType, property);\n      }\n    } else if (entity instanceof EntityDef) {\n\n    }\n\n    if (formObject != null) {\n      formObject.setParent(parent);\n    } else {\n      // if formObject no created but parent is passed then use it as formobject further (grid <- add furter elements)\n      formObject = parent;\n    }\n\n\n    if (entity instanceof EntityDef) {\n      let properties = entity.getPropertyDefs();\n\n      for (let property of properties) {\n        let childObject = this._buildFormObject(property, formObject);\n        formObject.insert(childObject);\n      }\n    } else if (entity instanceof PropertyDef) {\n      // TODO for properties which points to Entity / Entities\n      //property.getEntityDef\n      //formObject;\n      let property = <PropertyDef>entity;\n      if (property.isReference()) {\n        if (property.isEntityReference()) {\n          let entity = property.targetRef.getEntity();\n          let childObject = this._buildFormObject(entity, formObject);\n          formObject.insert(childObject);\n        } else {\n          let properties = this.schema.getPropertiesFor(property.targetRef.getClass());\n          for (let property of properties) {\n            let childObject = this._buildFormObject(property, formObject);\n            formObject.insert(childObject);\n          }\n        }\n      }\n    }\n\n    formObject.postProcess();\n    return formObject;\n\n  }\n\n  private forDefault(formType: string, property: PropertyDef) {\n    let formObject = ContentComponentRegistry.createHandler(formType);\n    if (formObject) {\n      formObject.handle('variant', formType);\n      this._applyValues(formObject, property);\n      return formObject;\n    }\n    throw new NoFormTypeDefinedError(formType);\n  }\n\n  private forText(formType: string, property: PropertyDef) {\n    return this._forInput(formType, property);\n  }\n\n  private forPassword(formType: string, property: PropertyDef) {\n    return this._forInput(formType, property);\n  }\n\n  private forEmail(formType: string, property: PropertyDef) {\n    return this._forInput(formType, property);\n  }\n\n\n  private _forInput(formType: string, property: PropertyDef) {\n    let formObject = ContentComponentRegistry.createHandler('input');\n    formObject.handle('variant', formType);\n    this._applyValues(formObject, property);\n    return formObject;\n  }\n\n  private _applyValues(formObject: FormObject, property: PropertyDef) {\n    formObject.handle('name', property.name);\n    formObject.handle('id', property.id());\n    formObject.handle('label', property.label ? property.label : _.capitalize(property.name));\n    formObject.handle('binding', property);\n\n    let options = property.getOptions();\n    if (options) {\n      Object.keys(options).forEach(opt => {\n        if (/^(source|target|property)/.test(opt)) return;\n        let value = options[opt];\n        formObject.handle(opt, value);\n      });\n    }\n\n  }\n\n\n  private _buildForm(data: any, parent: FormObject = null) {\n    let keys = _.remove(Object.keys(data), (e: string) => ['children', 'type'].indexOf(e) === -1);\n\n    let formObject: FormObject = null;\n    if (data.type) {\n      // lookup handler\n      formObject = ContentComponentRegistry.createHandler(data.type);\n    } else {\n      throw new NoFormTypeDefinedError();\n    }\n\n    if (!this.form) {\n      this.form = formObject;\n    }\n\n    formObject.setParent(parent);\n\n    for (let key of keys) {\n      let value = data[key];\n      if (_.isString(value)) {\n        if (/^\\$/.test(value)) {\n          value = new ResolveDataValue(value, formObject, key);\n        }\n      }\n      formObject.handle(key, value);\n    }\n\n\n    if (data.children) {\n      let value = data.children;\n      if (_.isArray(value)) {\n        for (let entry of value) {\n          let childObject = this._buildForm(entry, formObject);\n          formObject.insert(childObject);\n        }\n      } else {\n        throw new NotYetImplementedError();\n      }\n    }\n\n    formObject.postProcess();\n    return formObject;\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Registry} from 'typexs-schema/libs/Registry';\nimport {Form} from '../../libs/xsform/elements';\nimport {FormBuilder} from '../../libs/xsform/FormBuilder';\n\n\n@Injectable()\nexport class FormService {\n\n  cache: any = {};\n\n  get(name: string, instance: any): Form {\n    // TODO lookup for form modifications\n    let entityDef = Registry.getEntityDefFor(instance);\n    let builder2 = new FormBuilder();\n    return builder2.buildFromEntity(entityDef);\n  }\n\n}\n","import {ContentComponentRegistry} from '../ContentComponentRegistry';\n\n\nexport function ViewComponent(typeName: string) {\n  return function (object: Function) {\n    ContentComponentRegistry.addComponent(typeName, object);\n  };\n}\n","import * as _ from '../../libs/LoDash';\nimport {ComponentFactoryResolver, Inject, Injector, ViewChild, ViewContainerRef} from '@angular/core';\nimport {Context} from './Context';\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {TreeObject} from './TreeObject';\nimport {ContentComponentRegistry} from './ContentComponentRegistry';\n\nconst PROP_METADATA = '__prop__metadata__';\n\nexport abstract class AbstractComponent<T extends TreeObject> {\n\n  context: Context;\n\n  elem: T;\n\n  @ViewChild('content', {read: ViewContainerRef}) vc: ViewContainerRef;\n\n\n  constructor(@Inject(Injector) public injector: Injector,\n              @Inject(ComponentFactoryResolver) public r: ComponentFactoryResolver) {\n    this.construct();\n  }\n\n  construct() {\n  }\n\n  protected setElem(elem: T) {\n    this.elem = elem;\n  }\n\n\n  buildSingle(content: T): AbstractComponent<T> {\n\n\n    const handle = ContentComponentRegistry.$().getOrCreateDef(content.type);\n    if (handle && handle.component) {\n\n\n      if (this.vc) {\n\n        const factory = this.r.resolveComponentFactory(<any>handle.component);\n        const compRef = this.vc.createComponent(factory);\n        const instance = <AbstractComponent<T>>compRef.instance;\n\n        let metadata: { [k: string]: any } = null;\n        if (instance.constructor.hasOwnProperty(PROP_METADATA)) {\n          metadata = instance.constructor[PROP_METADATA];\n        }\n\n        instance.setElem(content);\n\n        if (instance.build) {\n          let refs = instance.build(content);\n\n          if (metadata) {\n            Object.keys(metadata).forEach(key => {\n              let v = metadata[key];\n              if (!_.isEmpty(v)) {\n\n                if (_.isArray(v) && v.length === 1) {\n                  let propDecorator = _.first(v);\n                  if (_.isFunction(propDecorator.selector)) {\n                    if (propDecorator.first) {\n                      // simple ViewChild\n                      instance[key] = _.find(refs, ref => ref.constructor == propDecorator.selector);\n                      instance[key + '2'] = _.find(refs, ref => ref.constructor == propDecorator.selector);\n                    } else {\n                      // simple ViewChildren\n                      instance[key] = _.filter(refs, ref => ref.constructor == propDecorator.selector);\n                      instance[key + '2'] = _.filter(refs, ref => ref.constructor == propDecorator.selector);\n                    }\n                  }\n                } else {\n                  console.error('can\\'t resolve metadata', instance.constructor, key, v);\n                }\n              }\n            });\n          }\n        }\n        return instance;\n      } else {\n        console.error('No view content setted');\n      }\n    } else {\n      throw new NoFormTypeDefinedError(content.type);\n    }\n    return null;\n\n  }\n\n\n  build(content: T): AbstractComponent<T>[] {\n    let refs: AbstractComponent<T>[] = [];\n    content.getChildren().forEach(contentObject => {\n      let ref = this.buildSingle(<T>contentObject);\n      refs.push(ref);\n    });\n    return refs;\n  }\n\n}\n","\nimport * as _ from '../../libs/LoDash';\nexport type ALIGNMENT = 'vertical' | 'horizontal'\n\nexport type LABEL_DISPLAY = 'top' | 'inline' | 'none'\n\nexport class Context {\n\n  name: string;\n\n  idx: number = -1;\n\n  parent: Context;\n\n  labelDisplay: LABEL_DISPLAY;\n\n  // alignment:\n\n  child(_name: string = null, idx: number = -1) {\n    let name = new Context();\n    name.parent = this;\n    name.name = _name;\n    name.idx = idx;\n    return name;\n  }\n\n\n  path(): string {\n    let arr: string[] = [];\n    if (this.parent) {\n      arr = this.parent.path().split('.');\n    }\n\n    if (this.idx > -1) {\n      arr[arr.length - 1] = arr[arr.length - 1] + '[' + this.idx + ']';\n      // arr.push(this.name + '[' + this.idx + ']');\n    } else {\n      arr.push(this.name);\n    }\n    //  console.log(arr);\n    return _.filter(arr, (x: string) => !_.isEmpty(x)).join('.');\n  }\n\n\n  get(key: string, _default: any = null): any {\n    if (_.has(this, key)) {\n      return _.get(this, key, _default);\n    } else if (this.parent) {\n      return this.parent.get(key);\n    }\n    return _default;\n  }\n\n}\n","import {DataContainer} from 'typexs-schema/libs/DataContainer';\n\nimport * as _ from '../../libs/LoDash';\nimport {PropertyDef} from 'typexs-schema/libs/PropertyDef';\n\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {AbstractComponent} from '../xsview/AbstractComponent';\nimport {FormObject, isFormObject} from './FormObject';\nimport {ContentComponentRegistry} from '../xsview/ContentComponentRegistry';\nimport {Context} from '../xsview/Context';\n\n\nexport abstract class AbstractFormComponent<T extends FormObject> extends AbstractComponent<T> {\n\n  static _inc: number = 0;\n\n\n  data: DataContainer<any>;\n\n  inc: number = 0;\n\n\n\n  construct(){\n    this.inc = AbstractFormComponent._inc++;\n  }\n\n  get id() {\n    return this.elem.id;\n  }\n\n\n  get name() {\n    return this.elem.name;\n  }\n\n\n  get label() {\n    return this.elem.label;\n  }\n\n\n  get labelDisplay() {\n    return this.context.get('labelDisplay', 'top');\n  }\n\n\n  get help() {\n    return this.elem.help;\n  }\n\n\n  get isReadOnly() {\n    return this.elem.readonly;\n  }\n\n\n  get isValid() {\n    return this.data.checked(this.name) && this.data.valid(this.name);\n  }\n\n\n  protected setFormObject(elem: T) {\n    this.setElem(elem);\n  }\n\n\n  setData(elem: T, parent: Context, idx: number = -1) {\n    this.setFormObject(elem);\n    if (parent) {\n      this.context = parent.child(elem.name, idx);\n    } else {\n      this.context = new Context();\n      if (elem.getBinding() instanceof PropertyDef) {\n        this.context.name = elem.name;\n        this.context.idx = idx;\n      }\n    }\n  }\n\n\n  get value() {\n    let path = this.context.path();\n    return _.get(this.data.instance, path, null);\n  }\n\n\n  set value(v: any) {\n    let path = this.context.path();\n    _.set(this.data.instance, path, v);\n  }\n\n\n  build(form: FormObject) : AbstractComponent<T>[] {\n    let comp:AbstractComponent<T>[] = []\n    form.getChildren().forEach(formObject => {\n      if (isFormObject(formObject)) {\n\n        let handle = ContentComponentRegistry.$().getOrCreateDef(formObject.type);\n        if (handle && handle.component) {\n          if (this.vc) {\n            let factory = this.r.resolveComponentFactory(<any>handle.component);\n            let ref = this.vc.createComponent(factory);\n            let instance = <AbstractFormComponent<any>>ref.instance;\n            instance.data = this.data;\n            instance.setData(formObject, this.context);\n            instance.build(formObject);\n            comp.push(instance);\n          } else {\n            console.error('No view content setted');\n          }\n        } else {\n          throw new NoFormTypeDefinedError(formObject.type);\n        }\n      }\n    });\n    return comp;\n  }\n\n}\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, Input, OnInit, Output} from '@angular/core';\nimport {DataContainer} from 'typexs-schema/libs/DataContainer';\nimport {FormService} from './form.service';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Form} from '../../libs/xsform/elements';\n\n@ViewComponent('form')\n@Component({\n  selector: 'xform',\n  templateUrl: './form.component.html',\n  //host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  //outputs: ['ngSubmit'],\n})\nexport class FormComponent extends AbstractFormComponent<Form> implements OnInit {\n\n  @Output()\n  ngSubmit = new EventEmitter();\n\n  @Input()\n  formName: string;\n\n  @Input()\n  instance: any;\n\n\n  constructor(@Inject(FormService) private formService: FormService,\n              @Inject(Injector) public injector: Injector,\n              @Inject(ComponentFactoryResolver) public r: ComponentFactoryResolver) {\n    super(injector, r);\n  }\n\n\n  ngOnInit() {\n\n    // TODO instance must be present\n    this.data = new DataContainer(this.instance);\n    this.elem = this.formService.get(this.formName, this.instance);\n\n    // TODO restructure form\n    this.build(this.elem);\n  }\n\n\n  async onSubmit($event: Event): Promise<boolean> {\n    await this.data.validate();\n    this.ngSubmit.emit({event:$event, data:this.data});\n    return false;\n  }\n\n\n}\n\n","import {Component} from '@angular/core';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Input} from '../../libs/xsform/elements';\n\n\n\n@ViewComponent('input')\n@Component({\n  selector: 'xinput',\n  templateUrl: './input.component.html',\n})\nexport class InputComponent extends AbstractFormComponent<Input>/* implements OnInit, OnChanges */ {\n\n  get type(){\n    return this.elem.variant;\n  }\n\n\n\n\n}\n","import {Component, Input} from '@angular/core';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Checkbox} from '../../libs/xsform/elements';\n\n\n@ViewComponent('checkbox')\n@Component({\n  selector: 'xcheckbox',\n  templateUrl: './checkbox.component.html',\n})\nexport class CheckboxComponent extends AbstractFormComponent<Checkbox> {\n\n  get type(){\n    return this.elem.variant;\n  }\n\n\n  get isChecked(){\n    return this.data.instance[this.name];\n  }\n\n  set isChecked(value:boolean){\n    if(value){\n      this.data.instance[this.name] = true;\n    }else{\n      this.data.instance[this.name] = false;\n    }\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Radio} from '../../libs/xsform/elements/Radio';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\n\n\n@ViewComponent('radio')\n@Component({\n  selector: 'xradio',\n  templateUrl: './radio.component.html',\n})\nexport class RadioComponent extends AbstractFormComponent<Radio> {\n\n  on: string = 'Yes';\n\n  off: string = 'No';\n\n  get type() {\n    return this.elem.variant;\n  }\n\n  get isChecked() {\n    return this.data.instance[this.name];\n  }\n\n  set isChecked(value: boolean) {\n    if (value) {\n      this.data.instance[this.name] = true;\n    } else {\n      this.data.instance[this.name] = false;\n    }\n  }\n}\n","import {Component, OnInit} from '@angular/core';\n\nimport * as _ from '../../libs/LoDash';\nimport {Observable} from 'rxjs/Observable';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Select} from '../../libs/xsform/elements';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\n\nexport class Option {\n  value: string = '';\n  label: string = '---';\n  default: boolean;\n}\n\n@ViewComponent('select')\n@Component({\n  selector: 'xselect',\n  templateUrl: './select.component.html',\n})\nexport class SelectComponent extends AbstractFormComponent<Select> implements OnInit {\n\n  cachedOptions: Option[] = [];\n\n\n  get supportsMultiple(): boolean {\n    return this.elem.getBinding().isCollection();\n  }\n\n  ngOnInit() {\n    this.cachedOptions = [];\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    let enums = this.retrieveEnum();\n\n    if (enums) {\n      if (enums instanceof Observable) {\n        enums.subscribe(e => {\n          let o = new Option();\n          if (_.isString(e)) {\n            o.label = o.value = e;\n          } else if (_.has(e, 'label') || _.has(e, 'value')) {\n            o.label = _.get(e, 'label', _.get(e, 'value'));\n            o.value = _.get(e, 'value', _.get(e, 'label'));\n          } else {\n            throw new Error('not found');\n          }\n          this.cachedOptions.push(o);\n        });\n      } else {\n        enums.forEach(e => {\n          let o = new Option();\n          if (_.isString(e)) {\n            o.label = o.value = e;\n          } else if (_.has(e, 'label') || _.has(e, 'value')) {\n            o.label = _.get(e, 'label', _.get(e, 'value'));\n            o.value = _.get(e, 'value', _.get(e, 'label'));\n          } else {\n            throw new Error('not found');\n          }\n          this.cachedOptions.push(o);\n        });\n      }\n    }\n  }\n\n\n  retrieveEnum(): any[] {\n    if (_.isArray(this.elem.enum)) {\n      return this.elem.enum;\n    } else if (_.isFunction(this.elem.enum)) {\n      return this.injector.get(this.elem.enum).get(this.name);\n    } else if (_.isString(this.elem.enum)) {\n      // check if an entry with the propertyname exists\n      let lookupPath: string | string[] = [];\n      if (this.context.parent) {\n        lookupPath.push(this.context.parent.path());\n      }\n      lookupPath.push(this.elem.enum)\n      lookupPath = (<string[]>lookupPath).join('.');\n\n      if (_.has(this.data.instance, lookupPath)) {\n        // TODO observe if property is changed, if it does then reset enum\n        return _.get(this.data.instance, lookupPath, []);\n      } else {\n        throw new Error('not found enum reference');\n      }\n    }\n    return [];\n  }\n}\n","import {Component, HostBinding} from '@angular/core';\nimport {GridComponent} from './grid.component';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\n\n\n@Component({\n  selector: 'xgridcell',\n  templateUrl: './grid-cell.component.html',\n})\nexport class GridCellComponent extends AbstractFormComponent<any> {\n\n  private grid: GridComponent;\n\n  @HostBinding('class')\n\tget hostClasses(): string {\n\t\treturn [\n\t\t  'col'\n\t\t].join(' ');\n\t}\n\n  setGridComponent(grid: GridComponent) {\n    this.grid = grid;\n  }\n\n\n\n\n}\n","import {Component, HostBinding} from '@angular/core';\nimport {GridComponent} from './grid.component';\nimport {GridCellComponent} from './grid-cell.component';\nimport {NoFormTypeDefinedError} from '../../libs/exceptions/NoFormTypeDefinedError';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {FormObject, isFormObject} from '../../libs/xsform/FormObject';\nimport {AbstractComponent} from '../../libs/xsview/AbstractComponent';\nimport {ContentComponentRegistry} from '../../libs/xsview/ContentComponentRegistry';\n\n\n@Component({\n  selector: 'xgridrow',\n  templateUrl: './grid-row.component.html',\n})\nexport class GridRowComponent extends AbstractFormComponent<any> {\n\n  private grid: GridComponent;\n\n  setGridComponent(grid: GridComponent) {\n    this.grid = grid;\n  }\n\n  @HostBinding('class')\n  get hostClasses(): string {\n    return [\n      'form-row'\n    ].join(' ');\n  }\n\n\n  get idx() {\n    return this.context.idx;\n  }\n\n  removeRow() {\n    this.grid.removeRow(this.context.idx);\n  }\n\n  build(form: FormObject):AbstractComponent<any>[] {\n    let comp:AbstractComponent<any>[] = []\n    form.getChildren().forEach(formObject => {\n\n      if (isFormObject(formObject)) {\n        let handle = ContentComponentRegistry.$().getOrCreateDef(formObject.type);\n        if (handle && handle.component) {\n\n          let cGridCellFactory = this.r.resolveComponentFactory(GridCellComponent);\n          let cGridCell = this.vc.createComponent(cGridCellFactory);\n          cGridCell.instance.data = this.data;\n          cGridCell.instance.setGridComponent(this.grid);\n          cGridCell.instance.setData(formObject, this.context);\n\n          if (cGridCell.instance.vc) {\n            let factory = this.r.resolveComponentFactory(<any>handle.component);\n            let ref = cGridCell.instance.vc.createComponent(factory);\n            let instance = <AbstractFormComponent<any>>ref.instance;\n            instance.data = this.data;\n            instance.setData(formObject, this.context);\n            instance.build(formObject);\n            comp.push(instance);\n          } else {\n            console.error('No view content setted');\n          }\n        } else {\n          throw new NoFormTypeDefinedError(formObject.type);\n        }\n      }\n    });\n    return comp;\n  }\n\n}\n","import {Component, ComponentRef, OnInit} from '@angular/core';\nimport {GridRowComponent} from './grid-row.component';\n\nimport * as _ from '../../libs/LoDash';\nimport {ViewComponent} from '../../libs/xsview/decorators/ViewComponent';\nimport {AbstractFormComponent} from '../../libs/xsform/AbstractFormComponent';\nimport {Grid} from '../../libs/xsform/elements';\nimport {AbstractComponent} from '../../libs/xsview/AbstractComponent';\nimport {FormObject, isFormObject} from '../../libs/xsform/FormObject';\n@ViewComponent('grid')\n@Component({\n  selector: 'xgrid',\n  templateUrl: './grid.component.html',\n})\nexport class GridComponent extends AbstractFormComponent<Grid> implements OnInit {\n\n\n  entries: ComponentRef<GridRowComponent>[] = [];\n\n  header:string[] = [];\n\n\n  ngOnInit() {\n  }\n\n\n  addRow(index: number = -1) {\n    let factory = this.r.resolveComponentFactory(GridRowComponent);\n    let cGridRow = this.vc.createComponent(factory);\n    cGridRow.instance.data = this.data;\n    cGridRow.instance.setGridComponent(this);\n    cGridRow.instance.setData(this.elem, this.context, this.entries.length);\n    this.entries.push(cGridRow);\n\n    let object = Reflect.construct(this.elem.getBinding().targetRef.getClass(), []);\n    let path = this.context.path();\n    if (this.elem.getBinding().isCollection()) {\n      let arraySetted = _.get(this.data.instance, path, null);\n      if (!arraySetted) {\n        arraySetted = [];\n      }\n      arraySetted[cGridRow.instance.context.idx] = object;\n      _.set(this.data.instance, path, arraySetted);\n    } else {\n      _.set(this.data.instance, path, object);\n    }\n    cGridRow.instance.build(this.elem);\n    return cGridRow.instance;\n  }\n\n\n  removeRow(idx: number) {\n    // TODO check if exists\n    let path = this.context.path();\n\n    let components = this.entries.splice(idx, 1);\n    let component = components.shift();\n\n    this.vc.remove(idx);\n    if (this.elem.getBinding().isCollection()) {\n      let arraySetted = _.get(this.data.instance, path, null);\n      if (!arraySetted) {\n        arraySetted = [];\n      }\n      arraySetted.splice(idx, 1);\n\n      _.set(this.data.instance, path, arraySetted);\n    } else {\n      _.set(this.data.instance, path, null);\n    }\n\n    for (let i = this.entries.length - 1; i >= 0; i--) {\n      this.entries[i].instance.context.idx = i;\n    }\n    component.destroy();\n  }\n\n\n  build(form: FormObject):AbstractComponent<any>[] {\n    this.context.labelDisplay = 'none';\n\n\n    form.getChildren().forEach(obj => {\n      if(isFormObject(obj)){\n        this.header.push(obj.label);\n      }\n    });\n\n\n    let dataEntries = this.elem.getBinding().get(this.data.instance);\n\n    let c = this.addRow();\n    return [c];\n  }\n\n}\n","\n// to integrate the elements\nimport {FORM_ELEMENTS} from '../../libs/xsform/elements';\n\nFORM_ELEMENTS;\n\nimport {FormComponent} from './form.component';\nimport {InputComponent} from './input.component';\nimport {CheckboxComponent} from './checkbox.component';\nimport {RadioComponent} from './radio.component';\nimport {SelectComponent} from './select.component';\nimport {GridComponent} from './grid.component';\nimport {GridRowComponent} from './grid-row.component';\nimport {GridCellComponent} from './grid-cell.component';\n\n\nexport const XFORMCOMPONENT = [\n  FormComponent,\n  InputComponent,\n  CheckboxComponent,\n  RadioComponent,\n  SelectComponent,\n  GridComponent,\n  GridRowComponent,\n  GridCellComponent\n]\n\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {XFORMCOMPONENT} from './xforms.elements';\nimport {FormService} from './form.service';\n\n\n@NgModule({\n  declarations: XFORMCOMPONENT,\n  imports: [\n    FormsModule,\n    BrowserModule\n  ],\n  entryComponents: XFORMCOMPONENT,\n  exports: XFORMCOMPONENT,\n  providers: [\n    FormService\n  ]\n})\nexport class xFormsModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TreeObject} from '../../libs/xsview/TreeObject';\nimport {AbstractComponent} from '../../libs/xsview/AbstractComponent';\n\n\n\n\n@Component({\n  selector: 'view-builder',\n  templateUrl: './view-builder.component.html',\n  // host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  // outputs: ['ngSubmit'],\n})\nexport class ViewBuilderComponent<T extends TreeObject> extends AbstractComponent<T> implements OnInit {\n\n  private _build:boolean = false;\n\n\n  _instance: any;\n\n  @Input() set instance(value: any) {\n    this._instance = value;\n    this._build = false;\n    this.__build();\n  }\n\n  get instance(): any {\n    return this._instance;\n  }\n\n  ngOnInit() {\n    this.__build();\n  }\n\n  private __build(){\n    if(!this._build){\n      this.vc.clear();\n      this.buildSingle(this._instance);\n      this._build = true;\n    }\n  }\n}\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ViewBuilderComponent} from './view-builder.component';\n\n\n@NgModule({\n  declarations: [ViewBuilderComponent],\n  imports: [\n    BrowserModule\n  ],\n  entryComponents: [],\n  exports: [ViewBuilderComponent],\n  providers: []\n})\nexport class xViewsModule {\n}\n"]}